package org.irisacsee.trajlab.query.coprocessor;

import org.irisacsee.trajlab.index.type.TimeLine;
import org.irisacsee.trajlab.query.condition.TemporalQueryCondition;
import org.irisacsee.trajlab.query.coprocessor.autogenerated.QueryCondition;

import java.util.ArrayList;
import java.util.List;

public class QueryProtoBuilder {
    public static QueryCondition.TemporalQueryWindow buildProtoTemporalWindow(TemporalQueryCondition tqc) {
        if (tqc == null) {
            return null;
        }
        TimeLine qw = tqc.getQueryWindows().get(0);
        return QueryCondition.TemporalQueryWindow
                .newBuilder()
                .setStartMs(qw.getTimeStart().toEpochSecond())
                .setEndMs(qw.getTimeEnd().toEpochSecond())
                .build();
    }

    public static List<QueryCondition.TemporalQueryWindow> buildProtoTemporalWindows(
            TemporalQueryCondition tqc) {
        if (tqc == null) {
            return null;
        }
        List<TimeLine> qws = tqc.getQueryWindows();
        List<QueryCondition.TemporalQueryWindow> temporalQueryWindows = new ArrayList<>(qws.size());
        for (TimeLine qw : qws) {
            QueryCondition.TemporalQueryWindow temporalQueryWindow =
                    QueryCondition.TemporalQueryWindow.newBuilder()
                            .setStartMs(qw.getTimeStart().toEpochSecond())
                            .setEndMs(qw.getTimeEnd().toEpochSecond())
                            .build();
            temporalQueryWindows.add(temporalQueryWindow);
        }
        return temporalQueryWindows;
    }
}
